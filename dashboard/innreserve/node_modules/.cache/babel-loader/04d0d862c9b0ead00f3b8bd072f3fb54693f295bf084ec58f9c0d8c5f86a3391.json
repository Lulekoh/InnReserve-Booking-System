{"ast":null,"code":"var _jsxFileName = \"/InnReserve-Booking-System/dashboard/innreserve/src/context/AuthState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport authReducer from '../reducers/authReducer';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthState = props => {\n  _s();\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/auth/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.message\n      });\n    }\n  };\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/auth/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.message\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","jsxDEV","_jsxDEV","AuthState","props","_s","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","message","login","logout","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/InnReserve-Booking-System/dashboard/innreserve/src/context/AuthState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport authReducer from '../reducers/authReducer';\nimport setAuthToken from '../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    }\n  };\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/auth/register', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.message,\n      });\n    }\n  };\n\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/auth/login', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.message,\n      });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}